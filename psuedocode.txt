const publicKey = config.publicKey
const privateKey = config.privateKey
baseURL = "marve gateway url"
endpoint = "char endpoint"

const face = grab face element
const name = grab name element
const addl = grab additional info box
const submit = grab submit button
const text = text input
const dropdown = dropdown input

function async populateDropDown () {
  try {
  const ts = get timestamp
  const hash = md5(ts + publicKey + privateKey) // double check this order
  const list = await axios.get(baseURL + endpoint + ts + publicKey + hash)
  let randomSelect = randomize a number within the array
  for (iterate over list) {
    const option = newElement('option')
    option.value = list[j]
    if (j === randomSelect) {
      option.selected = true
    }
    select.append(option)
  }
  } catch (error) {
    oh no error
    const option = newElement('option')
    option.value = "Dropdown list unavailable, blame MODOK"
  }
}

Call the function to actually populate the dropdown

function async getChar (char) {
  try {
    ts
    hash
    const char = axios thing ${char} .data.data.result
    return char
    } catch (error) {
    "Call failed, try again. Hail Hydra."
  }
}

function clearInfo () {
  while (anything in face) {
    face.lastChild.remove()
  }
  name.innerText = ''
  while (anything in addl) {
    addl.lastChild.remove()
  }
  while ul has children
    remove child
}

function removeTeamMember (div) {
  if (five team members) {
    enable 'add to team' button
    // In theory it should not be possible for there not to be an add-to-team button.
    // Also in theory if we're in this state that button should be disabled.
  }
  div.remove()
}

function makeLeader (div) {
  if (id 'leader' exists) {
    whoever is leader.id = ''
  }
  div.id = 'leader'
}

function moreInfo (char) {
  timestamp
  hash
  get events by id
  iterate over list
    create li
    append li to ul
  disable more button
}

addChar (char) {
  profile = char.profile
  name = char.name
  image = createImg
  identity = createP
  image.src = profile
  identity.innerText = name
  display = create div
  display.class = team-member
  display.append(image)
  display.append(identity)
  team.append(display)
  // make remove button
  const remove = create('button')
  make button say 'remove'
  remove.addListener('click', () => {
    removeTeamMember(display)
  })
  // make leader button
  const leader = create('button')
  make button say "make leader"
  leader.addEvent('click', () => {
    makeLeader(display)
  })
  display append leader button
  display append remove button
}

function newInfo(char) {
  clearInfo()
  const profile = char.profile
  name = char.name
  image = create
  image.src = profile
  display = create p
  display.value = name
  face.append(image)
  // make add button
  const add = create'button'
  add.addEvent('click', () => {
    addChar(char)
  })
  if (five team members) {
    add.class = 'disabled'
  }
  //make more button(char)
  const more = create('button')
  more.addEvent('click', () => {
    moreInfo(char)
  })
}  

submit.addEvent ('click', () => {
  if (text.value) {
    addChar(getChar(text.value))
  } else if (dropdown.value === "doesn't work") {
    alert("Please type a character's name into the text box)
  } else {
    addChar(getChar(dropdown.value))
  }
  }
})
